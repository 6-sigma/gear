name: Rust

on:
  push:
    branches: [ master, ci-test ]
  pull_request:
    branches: [ master, ci-test ]

env:
  CARGO_TERM_COLOR: always

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      name: "Checkout gear-node"
      with:
        path: "gear-node"
    - uses: actions/checkout@v2
      name: "Checkout gear-core"
      with:
        repository: 'gear-computing/gear-core'
        token: ${{ secrets.GEAR_PAT }}
        path: gear-core
    - uses: actions/checkout@v2
      name: "Checkout test-gear"
      with:
        repository: 'gear-computing/test-gear'
        token: ${{ secrets.GEAR_PAT }}
        path: test-gear
    - uses: actions/checkout@v2
      name: "Checkout gstd"
      with:
        repository: 'gear-computing/gstd'
        token: ${{ secrets.GEAR_PAT }}
        path: gstd
    - name: Install latest nightly & WASM toolchain
      uses: actions-rs/toolchain@v1
      with:
          toolchain: nightly
          target: wasm32-unknown-unknown
  build:
    needs: setup
    runs-on: ubuntu-latest
    steps:
    - name: Build
      run: cd gear-node && cargo build --release
    - name: Run tests
      run: cd gear-node && cargo test --release --all
    - name: Build WASM
      run: |
        cd test-gear
        cargo +nightly build --release --workspace --exclude=test-gear --target=wasm32-unknown-unknown
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: '16'
        architecture: 'x64' # optional, x64 or x86. If not specified, x64 will be used by default
    - run: cd gear-node/rpc-tests && npm install

  test:
      needs: build
      runs-on: ubuntu-latest

      steps:
      - name: Run testsuite
        run: cd gear-node && cargo run --release -- runtests ../test-gear/json/*.json
      - name: Run rpc-test
        run: |
          cd gear-node && cargo run --release -- --dev &
          node rpc-tests/index.js ../test-gear/json/*.json
